type Account {
  name: String!
  balance_available: Float
  balance_current: Float
  currency_code: String
}

type Transaction {
  amount: Float
  currency_code: String
  name: String!
  date: String!
  category: [String]
  pending: Boolean
}

type User {
  id: ID!
  email: String!
  plaidAccessToken: String
  income: Int
  savingsRate: Int
  expenses: Int
}


input UpdateIncomeInput {
  income: String!
}

type UpdateIncomeResponse {
  success: Boolean
  income: Int
}

type UpdateSavingsRateResponse {
  success: Boolean
  savingsRate: Int
}

input SavingsRateInput {
  savingsRate: Int!
}

input UpdateExpensesInput {
  expenses: Int!
}

type UpdateExpensesResponse {
  success: Boolean
  expenses: Int
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  user: User
}

input CreateUserInput {
  email: String!
  password: String!
}



type Query {
  accounts: [Account]
  transactions(offset: Int): [Transaction]
  me: User
}

type Mutation {
  updateIncome(input: UpdateIncomeInput!): UpdateIncomeResponse!
  updateExpenses(input: UpdateExpensesInput!): UpdateExpensesResponse!
  updateSavingsRate(input: SavingsRateInput!): UpdateSavingsRateResponse!
  login(input: LoginInput!): LoginResponse
  createUser(input: CreateUserInput!): User 
  logout: Boolean
}
